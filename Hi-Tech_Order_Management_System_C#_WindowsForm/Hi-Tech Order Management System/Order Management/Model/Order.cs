//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Order_Management.Model
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    public partial class Order
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Order()
        {
            this.OrderLines = new HashSet<OrderLine>();
        }

        public int OrderId { get; set; }
        public System.DateTime OrderDate { get; set; }
        public string OrderType { get; set; }
        public System.DateTime RequiredDate { get; set; }
        public System.DateTime ShippingDate { get; set; }
        public int OrderStatus { get; set; }
        public int CustomerId { get; set; }
        public int EmployeeId { get; set; }

        public virtual Customer Customer { get; set; }
        public virtual Employee Employee { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrderLine> OrderLines { get; set; }
        public virtual Status Status { get; set; }
        public List<Order> GetAllOrders()
        {
            List<Order> listO = new List<Order>();
            using (HiTechDBEntities1 db = new HiTechDBEntities1())
            {
                var selectAll = (from e in db.Orders
                                 select e).ToList();
                Order order;
                foreach (var item in selectAll)
                {
                    order = new Order();
                    order.OrderId = item.OrderId;
                    order.OrderDate = item.OrderDate;
                    order.OrderType = item.OrderType;
                    order.RequiredDate = item.RequiredDate;
                    order.ShippingDate = item.ShippingDate;
                    order.OrderStatus = item.OrderStatus;
                    order.CustomerId = item.CustomerId;
                    order.EmployeeId = item.EmployeeId;
                    listO.Add(order);
                }
            }
            return listO;
        }
        public override string ToString()
        {
            return $"Order Information:\n+ Order ID: {OrderId}\n+ Order Date: {OrderDate}\n" +
                   $"+ Order Type: {OrderType}\n+ Required Date: {RequiredDate}\n+ Shipping Date: {ShippingDate}\n+ Order Status: {OrderStatus}\n" +
                   $"+ Customer ID: {CustomerId}\n+ Employee ID: {EmployeeId}";
        }
    }
}
